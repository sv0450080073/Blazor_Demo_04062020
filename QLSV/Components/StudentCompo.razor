@using QLSV.Models
@using QLSV.Service
@inject IStudentService IStudentService

 <h3 class=""><strong><u>Học sinh</u></strong></h3>
<p></p>
<div class="row">
    <table>
        <thead>
            <tr>
                <th>Tên trường</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@School_Cascading</td>
            </tr>
        </tbody>
    </table>
    <table>
        <thead>
            <tr>
                
                <th>ID_SV</th>
                <th>Tên sinh viên</th>
            </tr>
        </thead>
        <tbody>
       
        @if (_DataStudent.Count > 0 && _DataStudent != null)
        {
            @foreach (var item in _DataStudent)
            {
            <tr>
                
                <td><input type="text" @bind="item.ID" /></td>
                <td><input type="text" @bind="item.StudentName" /></td>
            </tr>
            }
        }
        </tbody>
    </table>
    <button class="btn btn-outline-info" @onclick="@Click_Count">Click CallBack</button>
    <input @bind="@Count" />

</div>

@code {

    public int Count;
    private List<Student> _DataStudent;
    [Parameter]
    public int Class_ID { get; set; }
    //Cascading
    [CascadingParameter]
    protected int School_Cascading { get; set; }



    protected override void OnInitialized()
    {
        _DataStudent = (List<Student>)IStudentService.GetStudentsByClass_ID(Class_ID);
        Count = 1;
    }
    protected override void OnParametersSet()
    {
        _DataStudent = (List<Student>)IStudentService.GetStudentsByClass_ID(Class_ID);
    }

    //Event CallBack
    [Parameter]
    public EventCallback<int> Count01 { get; set; }

    public void Click_Count()
    {
        Count += 2;
        Count01.InvokeAsync(Count);
    }

}
<style>
    table {
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid black;
    }
</style>